[data]
motor_path = data/branching_path/train/path_2g_60_softmax10.npy
training_path = output/branching_path_2g_60
sequences = 60
max_timesteps = 30
motor_dims = 2
softmax_quant = 10
motor_softmax_min = 0
motor_softmax_max = 1
motor_softmax_sigma = 0.005

[network]
learning_rate = 0.001
gradient_clip = 0
gradient_clip_input = 0
modalities = motor
optimizer = adam
motor_celltype = MTRNN
motor_activation_func = tanh
motor_meta_prior = 0.01, 0.005
motor_layers_neurons = 20, 10
motor_layers_param = 4, 8
motor_layers_z_units = 2, 1
connect_bottomup_d = False
ugaussian_t_range = 0, 1
ugaussian_weight = 0.01

[training]
max_epochs = 50000
fig_xy_dims = 0, 1
fig_x_lim = 0.0, 1.0
fig_y_lim = 0.0, 1.0

[testing]
fig_xy_dims = 0, 1
fig_x_lim = 0.0, 1.0
fig_y_lim = 0.0, 1.0

[planning]
max_epochs = 500
learning_rate = 0.05
init_modalities = motor
goal_modalities = motor
fig_xy_dims = 0, 1
fig_x_lim = 0.0, 1.0
fig_y_lim = 0.0, 1.0
